{"version":3,"sources":["contexts/AppContext.js","components/routes/PrivateRoute.js","components/routes/PublicRoute.js","components/atoms/Button.js","components/atoms/Input.js","components/atoms/Label.js","components/molecules/InputBox.js","components/organisms/LogInDialog.js","components/pages/LogIn.js","components/organisms/SignUpDialog.js","components/pages/SignUp.js","components/organisms/Nav.js","components/organisms/AddNoteForm.js","components/molecules/Note.js","components/organisms/Notes.js","components/pages/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","PrivateRoute","children","redirectPath","rest","context","useContext","AppContext","user","id","to","PublicRoute","Button","className","icon","min","colorPrimary","colorSecondary","primary","secondary","props","Input","password","pure","condClassName","type","Label","InputBox","label","error","onChange","errorMessage","LogInDialog","setContext","history","useHistory","useState","username","data","setData","setError","handleSubmit","e","a","preventDefault","axios","post","response","notes","push","console","log","onSubmit","persist","prev","target","value","onClick","LogIn","SignUpDialog","SignUp","Nav","handleLogOut","faSignOutAlt","size","AddNoteForm","text","setText","length","body","placeholder","faPlus","Note","edit","setEdit","handleSave","put","map","note","message","handleDelete","delete","filter","bodyContent","autoFocus","btns","faSave","faPen","faTimes","Notes","key","reverse","UserProfile","App","Provider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7383a948.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;","\r\nimport React, {useContext, Fragment} from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nfunction PrivateRoute({ children, redirectPath, ...rest }) {\r\n\r\n  const {context} = useContext(AppContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      {context.user.id ? (\r\n        <Route {...rest}>\r\n          {children}\r\n        </Route>\r\n      ) : (\r\n        <Redirect to={redirectPath}/>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","\r\nimport React, {useContext, Fragment} from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nfunction PublicRoute({ children, redirectPath, ...rest }) {\r\n\r\n  const {context} = useContext(AppContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      {context.user.id ? (\r\n        <Redirect to={redirectPath}/>\r\n      ) : (\r\n        <Route {...rest}>\r\n          {children}\r\n        </Route>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PublicRoute;","import React from 'react';\r\n\r\nfunction Button({children, className, icon, min, colorPrimary, colorSecondary, primary, secondary, ...props}) {\r\n\r\n  let condClassName = '';\r\n\r\n  if(primary) className += ' button--primary'\r\n  else if(secondary) className += ' button--secondary'\r\n  \r\n  if(colorPrimary) className += ' button--color-primary'\r\n  if(colorSecondary) className += ' button--color-secondary'\r\n\r\n  if(min) className += ' button--min-w'\r\n\r\n  if(icon) className += ' button--icon'\r\n\r\n  return (\r\n    <button className={`button ${condClassName} ${className}`} {...props}>{children}</button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nfunction Input({children, password, className, pure, ...props}) {\r\n\r\n  let condClassName = '';\r\n  if(pure) condClassName += ' input--pure';\r\n\r\n  return (\r\n    <input className={`input ${condClassName} ${className}`} type={password ? 'password' : 'text'} {...props}>{children}</input>\r\n  )\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nfunction Label({children, ...props}) {\r\n\r\n  return (\r\n    <label className='input__label' {...props}>{children}</label>\r\n  )\r\n}\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport Input from '../atoms/Input';\r\nimport Label from '../atoms/Label';\r\n\r\nfunction InputBox({label, password, error, onChange, ...props}) {\r\n\r\n  const errorMessage = error ? (<span className='input__error'>{error}</span>) : null;\r\n\r\n  return (\r\n    <div className='input__container'>\r\n      <Label>{label}</Label>\r\n      <Input password={password} onChange={onChange}/>\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBox;\r\n","\r\nimport React, {useState, useContext}  from 'react';\r\nimport {useHistory}                   from 'react-router-dom';\r\nimport axios                          from 'axios';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport Button     from '../atoms/Button';\r\nimport InputBox   from '../molecules/InputBox';\r\n\r\nfunction LogInDialog(props) {\r\n\r\n  const {setContext}        = useContext(AppContext);\r\n  const history             = useHistory()\r\n\r\n  const [data, setData]     = useState({username: null, password: null})\r\n  const [error, setError]   = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n\r\n    try {\r\n      \r\n      e.preventDefault()\r\n  \r\n      if(!data.username || !data.password) return;\r\n  \r\n      const response = (await axios.post('/user/login',\r\n      {\r\n        username: data.username,\r\n        password: data.password\r\n      })).data;\r\n      \r\n      setContext({\r\n        user: {\r\n          id       : response.user.id,\r\n          username : response.user.username\r\n        },\r\n        notes: response.notes\r\n      })\r\n\r\n      history.push('/profile');\r\n      \r\n    } catch(err) {\r\n\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const handleUsernameChange = (e) => {\r\n    e.persist();\r\n    setData(prev => {\r\n      return {\r\n        ...prev,\r\n        username: e.target.value\r\n      }\r\n    })\r\n    setError('');\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    e.persist();\r\n    setData(prev => {\r\n      return {\r\n        ...prev,\r\n        password: e.target.value\r\n      }\r\n    })\r\n    setError('');\r\n  }\r\n\r\n  const handleGoToSignUp = (e) => {\r\n    e.preventDefault();\r\n    history.push('/signup');\r\n  }\r\n\r\n  return (\r\n    <div className='dialog__container'>\r\n      <form className='dialog' onSubmit={handleSubmit}>\r\n        <h1 className='dialog__heading'>Zaloguj się</h1>\r\n        <InputBox label='Nazwa użytkownika' onChange={handleUsernameChange}/>\r\n        <InputBox label='Hasło' error={error} password onChange={handlePasswordChange}/>\r\n        <div className='dialog__action-btns'>\r\n          <Button primary min>Zaloguj się</Button>\r\n          <span className='dialog__separator'>lub</span>\r\n          <Button colorSecondary min onClick={handleGoToSignUp}>Załóż konto</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogInDialog;\r\n","import React        from 'react';\r\nimport LogInDialog  from '../organisms/LogInDialog';\r\n\r\nfunction LogIn() {\r\n  return (\r\n    <LogInDialog/>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","\r\nimport React, {useState, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport Button from '../atoms/Button';\r\nimport InputBox from '../molecules/InputBox';\r\n\r\nfunction SignUpDialog() {\r\n\r\n  const {setContext} = useContext(AppContext);\r\n  const history = useHistory();\r\n  const [data, setData] = useState({username: null, password: null})\r\n\r\n  const handleSubmit = async (e) => {\r\n    \r\n    try {\r\n      \r\n      e.preventDefault();\r\n\r\n      const response = (await axios.post('/user', {\r\n        username: data.username,\r\n        password: data.password\r\n      })).data;\r\n\r\n      setContext({\r\n        user: {\r\n          id: response.id,\r\n          username: response.username\r\n        },\r\n        notes: null\r\n      })\r\n\r\n    } catch (err) {\r\n\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const handleUsernameChange = (e) => {\r\n    \r\n    e.persist();\r\n    \r\n    setData(prev => ({\r\n      ...prev,\r\n      username: e.target.value\r\n    }))\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    \r\n    e.persist();\r\n\r\n    setData(prev => ({\r\n      ...prev,\r\n      password: e.target.value\r\n    }))\r\n  }\r\n\r\n  const handleGoToLogIn = (e) => {\r\n    e.preventDefault();\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className='dialog__container'>\r\n      <form className='dialog'>\r\n        <h1 className='dialog__heading'>Załóż konto</h1>\r\n\r\n        <InputBox label='Podaj nazwę użytkownika' onChange={handleUsernameChange}/>\r\n        <InputBox label='Podaj hasło' password onChange={handlePasswordChange}/>\r\n        \r\n        <div className='dialog__action-btns'>\r\n          <Button secondary min onClick={handleSubmit}>Załóż konto</Button>\r\n          <span className='dialog__separator'>lub</span>\r\n          <Button colorPrimary min onClick={handleGoToLogIn}>Zaloguj się</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpDialog;","import React         from 'react';\r\nimport SignUpDialog  from '../organisms/SignUpDialog';\r\n\r\nfunction SignUp() {\r\n  return (\r\n    <SignUpDialog/>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, {useContext} from 'react'\r\nimport AppContext from '../../contexts/AppContext'\r\nimport axios from 'axios'\r\n\r\nimport Button from '../atoms/Button'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Nav() {\r\n\r\n  const {context, setContext} = useContext(AppContext)\r\n\r\n  const handleLogOut = async () => {\r\n    \r\n    try {\r\n\r\n      await axios.post('/user/logout')\r\n\r\n    } catch (err) {\r\n\r\n      console.log(err);\r\n\r\n    } finally {\r\n      \r\n      setContext({\r\n        user: {\r\n          id: null,\r\n          username: null\r\n        },\r\n        notes: null\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className='nav'>\r\n      <p className='nav__welcome'>Hello <span className='nav__username'>{context.user.username}</span></p>\r\n      <Button icon onClick={handleLogOut}>\r\n        <Icon icon={faSignOutAlt} size=\"lg\"/>\r\n      </Button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav\r\n","import React, {useState, useContext}  from 'react'\r\nimport AppContext                     from '../../contexts/AppContext'\r\nimport axios                          from 'axios';\r\n\r\nimport Input                        from '../atoms/Input'\r\nimport Button                       from '../atoms/Button'\r\nimport { FontAwesomeIcon as Icon }  from '@fortawesome/react-fontawesome'\r\nimport { faPlus }                   from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction AddNoteForm() {\r\n\r\n  const {setContext}    = useContext(AppContext)\r\n  const [text, setText] = useState('')\r\n\r\n  const handleSubmit = async (e) => {\r\n    \r\n    try {\r\n\r\n      e.preventDefault()\r\n\r\n      if(!text.length) return;\r\n  \r\n      const response = (await axios.post('/notes', {\r\n        body: text\r\n      })).data\r\n\r\n      setContext(prev => {\r\n        return {\r\n          ...prev,\r\n          notes: prev.notes === null ? [{\r\n            id: response.id,\r\n            body: response.body\r\n          }] : [\r\n            ...prev.notes,\r\n            {\r\n              id: response.id,\r\n              body: response.body\r\n            }\r\n          ]\r\n        }\r\n      })\r\n\r\n    } catch (err) {\r\n\r\n      console.log(err);\r\n\r\n    } finally {\r\n\r\n      setText('')\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form className='create__form' onSubmit={handleSubmit}>\r\n      <div className='note note--create'>\r\n        <Input pure placeholder='Napisz notatkę...' value={text} onChange={handleChange}/>\r\n        <div className='note__btns'>\r\n          <Button icon>\r\n            <Icon icon={faPlus}/>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddNoteForm;\r\n","import React, {useContext, useState, Fragment} from 'react';\r\nimport AppContext from '../../contexts/AppContext';\r\nimport axios from 'axios';\r\n\r\nimport Button from '../atoms/Button';\r\nimport Input from '../atoms/Input';\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\r\nimport { faPen, faTimes, faSave } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Note({id, body}) {\r\n\r\n  const {setContext} = useContext(AppContext);\r\n  const [edit, setEdit] = useState(false);\r\n  const [text, setText] = useState(body);\r\n\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const handleSave = async () => {\r\n\r\n    try {\r\n\r\n      const response = (await axios.put('/notes/' + id, {\r\n        body: text\r\n      })).data;\r\n\r\n      setContext(prev => ({\r\n        ...prev,\r\n        notes: prev.notes.map(note => note.id === id ? ({\r\n          id: response.id,\r\n          body: response.body\r\n        }) : note)\r\n      }))\r\n\r\n    } catch(err) {\r\n\r\n      console.log(err.response.data.message || err);\r\n\r\n    } finally {\r\n\r\n      setEdit(false);\r\n    } \r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    \r\n    try {\r\n\r\n      await axios.delete('/notes/' + id);\r\n\r\n      setContext(prev => ({\r\n        ...prev,\r\n        notes: prev.notes.length === 1 ? null : prev.notes.filter(note => note.id !== id)\r\n      }))\r\n\r\n    } catch(err) {\r\n\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const bodyContent = edit ? (\r\n    <Input pure autoFocus value={text} onChange={handleChange}/>\r\n  ) : (\r\n    <p className='note__text'>{body}</p>\r\n  );\r\n\r\n  const btns = edit ? (\r\n    <Button icon onClick={handleSave}>\r\n      <Icon icon={faSave}/>\r\n    </Button>\r\n  ) : (\r\n    <Fragment>\r\n      <Button className='note__btn'icon onClick={handleEdit}>\r\n        <Icon icon={faPen}/>\r\n      </Button>\r\n      <Button icon onClick={handleDelete}>\r\n        <Icon icon={faTimes} size=\"lg\"/>\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className='note'>\r\n      {bodyContent}\r\n      <div className='note__btns'>{btns}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, {useContext} from 'react';\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nimport Note from '../molecules/Note';\r\n\r\nfunction Notes() {\r\n\r\n  const {context} = useContext(AppContext);\r\n\r\n  const notes = context.notes !== null ? (\r\n    context.notes.map(note => {\r\n      return (\r\n        <Note key={note.id} {...note}/>\r\n      )\r\n    })\r\n  ).reverse() : (\r\n    <p>Brak notatek</p>\r\n  );\r\n\r\n  return (\r\n    <section className='notes'>{notes}</section>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","import React        from 'react';\r\n\r\nimport Nav          from '../organisms/Nav';\r\nimport AddNoteForm  from '../organisms/AddNoteForm';\r\nimport Notes        from '../organisms/Notes';\r\n\r\nfunction UserProfile() {\r\n\r\n  return (\r\n    <div className='profile-container'>\r\n      <Nav/>\r\n      <div className='dialog__container'>\r\n        <article className='dialog'>\r\n          <h1 className='dialog__heading--sm'>Twoje rzeczy do zrobienia</h1>\r\n          <AddNoteForm/>\r\n          <Notes/>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport AppContext from './contexts/AppContext';\n\nimport PrivateRoute from './components/routes/PrivateRoute';\nimport PublicRoute from './components/routes/PublicRoute';\nimport LogIn from './components/pages/LogIn';\nimport SignUp from './components/pages/SignUp';\nimport UserProfile from './components/pages/UserProfile';\n\nfunction App() {\n  \n  const [context, setContext] = useState({\n    user: {\n      id: null,\n      username: null\n    },\n    notes: null\n  });\n\n  return (\n    <div className='container'>\n      <AppContext.Provider value={{context, setContext}}>\n        <Router>\n          <Switch>\n            <PublicRoute exact path='/' redirectPath='/profile'>\n              <LogIn/>\n            </PublicRoute>\n            <PublicRoute path='/signup' redirectPath='/profile'>\n              <SignUp/>\n            </PublicRoute>\n            <PrivateRoute path='/profile' redirectPath='/'>\n              <UserProfile/>\n            </PrivateRoute>\n            <Redirect to='/'/>\n          </Switch>\n        </Router>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}